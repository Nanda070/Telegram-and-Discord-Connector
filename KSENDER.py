import discord
from discord.ext import commands
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
import asyncio
from aiogram.filters import Command
from aiogram import Router

# ====== CONFIG ======
DISCORD_TOKEN = "MTMzNTMyMTUxNDY1MTY4NTA0Ng.GWkU74.ABzsRkX1W7PPUs9muTumy3Y3hT7Pb4LgNHmF3I"
TELEGRAM_TOKEN = "7919818538:AAEIjEwU2vQOplhoV_S2FXqfEj5pWNtJOi0"
DISCORD_GUILD_ID = 1139578692159414382  # ID –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ Discord
DISCORD_CHANNEL_ID = 1139591871820214293  # ID –∫–∞–Ω–∞–ª–∞ –≤ Discord
TELEGRAM_CHAT_ID = -1002315340645  # ID –≥—Ä—É–ø–ø—ã –≤ Telegram
ADMIN_ROLE_ID = 1325381399708176424  # ID —Ä–æ–ª–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
LOG_CHANNEL_ID = 1335322176827691058  # –ö–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤

message_map = {}  # {tg_message_id: discord_message_id, discord_message_id: tg_message_id}

sync_enabled = True  # Sync Flag

# ====== DISCORD BOT ======
intents = discord.Intents.all()
discord_bot = commands.Bot(command_prefix="/", intents=intents)

def has_admin_role(ctx):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω—É–∂–Ω–∞—è —Ä–æ–ª—å."""
    return any(role.id == ADMIN_ROLE_ID for role in ctx.author.roles)


@discord_bot.event
async def on_ready():
    print(f"{discord_bot.user} –∑–∞–ø—É—â–µ–Ω!")


@discord_bot.command()
@commands.check(has_admin_role)
async def sync_on(ctx):
    global sync_enabled
    sync_enabled = True
    await ctx.send("‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞!")


@discord_bot.command()
@commands.check(has_admin_role)
async def sync_off(ctx):
    global sync_enabled
    sync_enabled = False
    await ctx.send("‚ùå –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—ã–∫–ª—é—á–µ–Ω–∞!")


@discord_bot.command()
async def status(ctx):
    status_msg = "üü¢ –í–∫–ª—é—á–µ–Ω–∞" if sync_enabled else "üî¥ –í—ã–∫–ª—é—á–µ–Ω–∞"
    await ctx.send(f"–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: {status_msg}")


@discord_bot.event
async def on_message(message):
    if message.author.bot or not sync_enabled or message.channel.id != DISCORD_CHANNEL_ID:
        return

    text = f"[Discord] {message.author.name}: {message.content}"
    tg_msg = await tg_bot.send_message(TELEGRAM_CHAT_ID, text)

    message_map[message.id] = tg_msg.message_id  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π

    log_channel = discord_bot.get_channel(LOG_CHANNEL_ID)
    if log_channel:
        await log_channel.send(f"üìú LOG: {text}")

    await discord_bot.process_commands(message)

@discord_bot.event
async def on_message_edit(before, after):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤ Discord."""
    if before.id not in message_map:
        print("‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ message_map, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.")
        return

    tg_message_id = message_map[before.id]

    try:
        new_text = f"[Discord] {before.author.name}: {after.content}"
        await tg_bot.edit_message_text(chat_id=TELEGRAM_CHAT_ID, message_id=tg_message_id, text=new_text)
        print(f"‚úèÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –≤ Telegram: {new_text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: {e}")

dp = Dispatcher()  # –°–æ–∑–¥–∞—ë–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä
router = Router()  # –°–æ–∑–¥–∞—ë–º —Ä–æ—É—Ç–µ—Ä
dp.include_router(router)  # –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ—É—Ç–µ—Ä –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä


@router.edited_message()
async def tg_message_edit(message: Message):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Discord –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤ Telegram."""
    if message.message_id not in message_map:
        print("‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ message_map, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.")
        return

    discord_message_id = message_map[message.message_id]
    discord_channel = discord_bot.get_channel(DISCORD_CHANNEL_ID)

    if discord_channel is None:
        discord_channel = await discord_bot.fetch_channel(DISCORD_CHANNEL_ID)

    try:
        discord_msg = await discord_channel.fetch_message(discord_message_id)
        new_text = f"[Telegram] {message.from_user.first_name}: {message.text or ''}"
        await discord_msg.edit(content=new_text)
        print(f"‚úèÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –≤ Discord: {new_text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Discord: {e}")

# ====== TELEGRAM BOT ======
tg_bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher()

router = Router()
dp.include_router(router)

@router.message()
async def tg_to_discord(message: Message):
    if not sync_enabled:
        print("‚è∏ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—ã–∫–ª—é—á–µ–Ω–∞.")
        return

    author = message.from_user.first_name
    text = f"[Telegram] {author}: {message.text or ''}"

    discord_channel = discord_bot.get_channel(DISCORD_CHANNEL_ID)
    if not discord_channel:
        print("‚ùå –û—à–∏–±–∫–∞: Discord –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return

    try:
        discord_msg = await discord_channel.send(text)
        message_map[message.message_id] = discord_msg.id  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≤—è–∑—å —Å–æ–æ–±—â–µ–Ω–∏–π
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –≤ Discord.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Discord: {e}")

        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        if log_channel:
            await log_channel.send(f"üìú LOG: {text}")


@router.message()
async def tg_message_delete(message: Message):
    """–£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Discord –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤ Telegram."""
    if message.message_id not in message_map:
        print("‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ message_map, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.")
        return

    discord_message_id = message_map.pop(message.message_id, None)
    discord_channel = discord_bot.get_channel(DISCORD_CHANNEL_ID)

    if discord_channel is None:
        discord_channel = await discord_bot.fetch_channel(DISCORD_CHANNEL_ID)

    try:
        discord_msg = await discord_channel.fetch_message(discord_message_id)
        await discord_msg.delete()
        print(f"üóë –°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ –≤ Discord.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Discord: {e}")

@discord_bot.event
async def on_message_delete(message):
    """–£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤ Discord."""
    if message.id not in message_map:
        print("‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ message_map, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.")
        return

    tg_message_id = message_map.pop(message.id, None)

    try:
        await tg_bot.delete_message(chat_id=TELEGRAM_CHAT_ID, message_id=tg_message_id)
        print(f"üóë –°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ –≤ Telegram.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: {e}")

async def start_telegram_bot():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç Telegram-–±–æ—Ç–∞."""
    await dp.start_polling(tg_bot)


# ====== –ó–ê–ü–£–°–ö –û–ë–û–ò–• –ë–û–¢–û–í ======
async def main():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç Telegram –∏ Discord –±–æ—Ç–æ–≤ –≤–º–µ—Å—Ç–µ."""
    loop = asyncio.get_event_loop()
    loop.create_task(start_telegram_bot())  # –ó–∞–ø—É—Å–∫–∞–µ–º Telegram
    await discord_bot.start(DISCORD_TOKEN)  # –ó–∞–ø—É—Å–∫–∞–µ–º Discord


if __name__ == "__main__":
    async def main():
        loop = asyncio.get_event_loop()
        loop.create_task(start_telegram_bot())  # Telegram –±–æ—Ç
        await discord_bot.start(DISCORD_TOKEN)  # Discord –±–æ—Ç


    asyncio.run(main())  # –ó–∞–ø—É—Å–∫
